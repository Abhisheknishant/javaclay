
package es.bsc.dataclay.util.management.metadataservice;

import java.util.Arrays;

import es.bsc.dataclay.util.ids.DataClayInstanceID;

public class DataClayInstance {
	/** ID generated by source dataClay instance. */
	private DataClayInstanceID dcID;
	/** Host of the main service of the dataClay instance. */
	private String[] hosts;
	/** Port of the main service of the dataClay instance. */
	private Integer[] ports;

	/**
	 * Empty constructor of the DataClayInstance
	 */
	public DataClayInstance() {
	}

	public DataClayInstance(final DataClayInstanceID newdcID, final String newhost, final Integer newport) {
		this.dcID = newdcID;
		this.hosts = new String[] { newhost };
		this.ports = new Integer[] { newport };
	}

	/**
	 * Basic constructor for dataClay instances. For each host must be a port.
	 * 
	 * @param newdcID
	 *            id of the dataClay instance
	 * @param newhosts
	 *            hosts of the main service of the dataClay instance
	 * @param newports
	 *            ports of the main service of the dataClay instance
	 */
	public DataClayInstance(final DataClayInstanceID newdcID, final String[] newhosts, final Integer[] newports) {
		this.dcID = newdcID;
		this.hosts = newhosts;
		this.ports = newports;
	}

	public DataClayInstanceID getDcID() {
		return dcID;
	}

	public void setDcID(final DataClayInstanceID newdcID) {
		this.dcID = newdcID;
	}

	public String[] getHosts() {
		return hosts;
	}

	public void setHosts(final String[] hosts) {
		this.hosts = hosts;
	}

	public Integer[] getPorts() {
		return ports;
	}

	public void setPorts(final Integer[] ports) {
		this.ports = ports;
	}

	@Override
	public String toString() {
		return "DataClay instance info: [id: " + getDcID() + "] [hosts: " + Arrays.toString(getHosts())
				+ "] [corresponding ports: " + Arrays.toString(getPorts()) + "]";
	}
}
